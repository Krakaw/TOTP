name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.0.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build-x86_64:
    name: Build for x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install x86_64 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Build x86_64
        env:
          OPENSSL_DIR: /usr
          OPENSSL_INCLUDE_DIR: /usr/include
          OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Upload x86_64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: totp-x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release/totp

  build-arm64:
    name: Build for ARM64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install ARM64 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config gcc-aarch64-linux-gnu crossbuild-essential-arm64
          # Install ARM64 OpenSSL development packages
          sudo apt-get install -y libssl-dev:arm64

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu

      - name: Setup ARM64 OpenSSL
        run: |
          # Create necessary directories
          sudo mkdir -p /usr/local/aarch64-linux-gnu/lib
          sudo mkdir -p /usr/local/aarch64-linux-gnu/include
          # Copy ARM64 OpenSSL files to the correct location
          sudo cp -r /usr/lib/aarch64-linux-gnu/* /usr/local/aarch64-linux-gnu/lib/
          sudo cp -r /usr/include/aarch64-linux-gnu/openssl /usr/local/aarch64-linux-gnu/include/

      - name: Build ARM64
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          OPENSSL_DIR: /usr/local/aarch64-linux-gnu
          OPENSSL_INCLUDE_DIR: /usr/local/aarch64-linux-gnu/include
          OPENSSL_LIB_DIR: /usr/local/aarch64-linux-gnu/lib
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          AR_aarch64_unknown_linux_gnu: aarch64-linux-gnu-ar
        run: cargo build --release --target aarch64-unknown-linux-gnu

      - name: Upload ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: totp-aarch64-unknown-linux-gnu
          path: target/aarch64-unknown-linux-gnu/release/totp

  release:
    name: Create Release
    needs: [build-x86_64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/totp-x86_64-unknown-linux-gnu
            artifacts/totp-aarch64-unknown-linux-gnu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 