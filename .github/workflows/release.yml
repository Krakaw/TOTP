name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.0.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build-x86_64:
    name: Build for x86_64 Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install x86_64 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Show Rust version
        run: |
          rustc --version
          cargo --version

      - name: Build x86_64
        env:
          OPENSSL_DIR: /usr
          OPENSSL_INCLUDE_DIR: /usr/include
          OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          ls -la target/x86_64-unknown-linux-gnu/release/

      - name: Prepare x86_64 binary
        run: |
          cp target/x86_64-unknown-linux-gnu/release/trotp trotp-x86_64-unknown-linux-gnu
          chmod +x trotp-x86_64-unknown-linux-gnu

      - name: Upload x86_64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: trotp-x86_64-unknown-linux-gnu
          path: trotp-x86_64-unknown-linux-gnu
          if-no-files-found: error

  build-arm64-macos:
    name: Build for ARM64 macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Show Rust version
        run: |
          rustc --version
          cargo --version

      - name: Build ARM64 macOS
        run: |
          cargo build --release --target aarch64-apple-darwin
          ls -la target/aarch64-apple-darwin/release/

      - name: Prepare ARM64 binary
        run: |
          cp target/aarch64-apple-darwin/release/trotp trotp-aarch64-apple-darwin
          chmod +x trotp-aarch64-apple-darwin

      - name: Upload ARM64 macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: trotp-aarch64-apple-darwin
          path: trotp-aarch64-apple-darwin
          if-no-files-found: error

  release:
    name: Create Release
    needs: [build-x86_64, build-arm64-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: |
          echo "Listing artifacts directory:"
          ls -la artifacts/
          echo "Listing x86_64 artifact:"
          ls -la artifacts/trotp-x86_64-unknown-linux-gnu/
          echo "Listing ARM64 artifact:"
          ls -la artifacts/trotp-aarch64-apple-darwin/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/trotp-x86_64-unknown-linux-gnu/trotp-x86_64-unknown-linux-gnu
            artifacts/trotp-aarch64-apple-darwin/trotp-aarch64-apple-darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 